/**
 * \brief Implements $object.ruleName
 * 
 * This is the interface class. This implements the patterns
#for $p in $object.rule.patterns:
 *  - $repr($p)
#end for
 * 
 **/
class ${object.ruleName}:public CAst
{
	public:
		${object.ruleName}():CAst()
		{}

		static CAST_CLASS_ID ID;
		/**
                 * \brief Interface for the child classes to return the name
                 *
                 */
		virtual std::string name()const=0;

		/**
                 *  \brief Interface for the child classes to return the class ID
                 *
                 */
		virtual CAST_CLASS_ID classId()const=0;
		
		virtual ~${object.ruleName}(){};

		virtual std::ostream& codeStream(std::ostream& stream)const=0;
		virtual std::ostream& graphStream(std::ostream& stream,GraphProps graphProps=GraphProps())const=0;
};

namespace Ptr
{
	typedef ReferenceCountedAutoPointer<${object.ruleName}> ${object.ruleName};
}


#for $h in $object.handlers:
#set $h.parent=$object.ruleName
$utils.simpleClassCreator.declareClass($h)
#end for
